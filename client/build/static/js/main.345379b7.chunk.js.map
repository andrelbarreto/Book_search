{"version":3,"sources":["components/Jumbotron/index.js","components/Card/index.js","components/Form/index.js","components/List/index.js","components/Grid/index.js","components/Book/index.js","components/Footer/index.js","utils/API.js","pages/Home.js","pages/Saved.js","pages/NoMatch.js","components/Nav/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Jumbotron","children","className","Card","icon","title","aria-hidden","Form","q","handleInputChange","handleFormSubmit","htmlFor","id","type","value","placeholder","name","onChange","required","onClick","List","ListItem","Container","fluid","Row","Col","size","split","map","join","Book","subtitle","authors","link","description","image","Button","target","rel","href","src","alt","Footer","axios","get","params","delete","bookData","post","Home","Component","state","books","message","event","this","setState","getBooks","API","then","res","data","catch","preventDefault","handleBookSave","book","find","googleId","volumeInfo","infoLink","imageLinks","thumbnail","render","length","key","Saved","getSavedBooks","err","console","log","handleBookDelete","componentDidMount","_id","NoMatch","role","aria-label","Nav","open","width","window","innerWidth","updateWidth","newState","toggleNav","addEventListener","componentWillUnmount","removeEventListener","to","data-toggle","data-target","aria-controls","aria-expanded","location","pathname","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","document","getElementById","URL","process","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.345379b7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return <div className=\"jumbotron mt-4\">{children}</div>;\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\n\r\nfunction Card({ icon, title, children }) {\r\n  return (\r\n    <div className=\"card mt-4\">\r\n      <div className=\"card-header\">\r\n        <h3>\r\n          <strong>\r\n            <i className={`fa fa-${icon}`} aria-hidden=\"true\" /> {title}\r\n          </strong>\r\n        </h3>\r\n      </div>\r\n      <div className=\"card-body\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nfunction Form({ q, handleInputChange, handleFormSubmit }) {\r\n  return (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"Query\">\r\n          <strong>Book</strong>\r\n        </label>\r\n        <input\r\n          className=\"form-control\"\r\n          id=\"Title\"\r\n          type=\"text\"\r\n          value={q}\r\n          placeholder=\"I Robot\"\r\n          name=\"q\"\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"pull-right\">\r\n        <button\r\n          onClick={handleFormSubmit}\r\n          type=\"submit\"\r\n          className=\"btn btn-lg btn-danger float-right\"\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// This component exports both the List and ListItem components\r\n\r\nexport const List = ({ children }) => (\r\n  <ul className=\"list-group\">\r\n    {children}\r\n  </ul>\r\n);\r\n\r\nexport function ListItem({ children }) {\r\n  return <li className=\"list-group-item\">{children}</li>;\r\n}\r\n","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ListItem } from \"../List\";\r\nimport { Row, Col } from \"../Grid\";\r\nimport \"./style.css\";\r\n\r\nfunction Book({ title, subtitle, authors, link, description, image, Button }) {\r\n  return (\r\n    <ListItem>\r\n      <Row className=\"flex-wrap-reverse\">\r\n        <Col size=\"md-8\">\r\n          <h3 className=\"font-italic\">{title}</h3>\r\n          {subtitle && <h5 className=\"font-italic\">{subtitle}</h5>}\r\n        </Col>\r\n        <Col size=\"md-4\">\r\n          <div className=\"btn-container\">\r\n            <a className=\"btn btn-light\" target=\"_blank\" rel=\"noopener noreferrer\" href={link}>\r\n              View\r\n            </a>\r\n            <Button />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col size=\"md-6\">\r\n          <p className=\"font-italic small\">Written by {authors}</p>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col size=\"12 sm-4 md-2\">\r\n          <img className=\"img-thumbnail img-fluid w-100\" src={image} alt={title} />\r\n        </Col>\r\n        <Col size=\"12 sm-8 md-10\">\r\n          <p>{description}</p>\r\n        </Col>\r\n      </Row>\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nexport default Book;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <hr />\r\n      <p className=\"pull-right\">\r\n        <i className=\"fab fa-github\" /> Built using React.js\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets books from the Google API\r\n  getBooks: function(q) {\r\n    return axios.get(\"/api/google\", { params: { q: \"title:\" + q } });\r\n  },\r\n  // Gets all saved books\r\n  getSavedBooks: function() {\r\n    return axios.get(\"/api/books\");\r\n  },\r\n  // Deletes the saved book with the given id\r\n  deleteBook: function(id) {\r\n    return axios.delete(\"/api/books/\" + id);\r\n  },\r\n  // Saves an book to the database\r\n  saveBook: function(bookData) {\r\n    return axios.post(\"/api/books\", bookData);\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport Card from \"../components/Card\";\r\nimport Form from \"../components/Form\";\r\nimport Book from \"../components/Book\";\r\nimport Footer from \"../components/Footer\";\r\nimport API from \"../utils/API\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List } from \"../components/List\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    books: [],\r\n    q: \"\",\r\n    message: \"Search For A Book\"\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  getBooks = () => {\r\n    API.getBooks(this.state.q)\r\n      .then(res =>\r\n        this.setState({\r\n          books: res.data\r\n        })\r\n      )\r\n      .catch(() =>\r\n        this.setState({\r\n          books: [],\r\n          message: \"No New Books Found, Try again\"\r\n        })\r\n      );\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.getBooks();\r\n  };\r\n\r\n  handleBookSave = id => {\r\n    const book = this.state.books.find(book => book.id === id);\r\n\r\n    API.saveBook({\r\n      googleId: book.id,\r\n      title: book.volumeInfo.title,\r\n      subtitle: book.volumeInfo.subtitle,\r\n      link: book.volumeInfo.infoLink,\r\n      authors: book.volumeInfo.authors,\r\n      description: book.volumeInfo.description,\r\n      image: book.volumeInfo.imageLinks.thumbnail\r\n    }).then(() => this.getBooks());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <Jumbotron>\r\n              <h1 className=\"text-center\">\r\n                <strong> Google Books Search</strong>\r\n              </h1>\r\n              <h2 className=\"text-center\">Search for and Save Books you chose!</h2>\r\n            </Jumbotron>\r\n          </Col>\r\n          <Col size=\"md-12\">\r\n            <Card title=\"Book Search\" icon=\"far fa-book\">\r\n              <Form\r\n                handleInputChange={this.handleInputChange}\r\n                handleFormSubmit={this.handleFormSubmit}\r\n                q={this.state.q}\r\n              />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <Card title=\"Results\">\r\n              {this.state.books.length ? (\r\n                <List>\r\n                  {this.state.books.map(book => (\r\n                    <Book\r\n                      key={book.id}\r\n                      title={book.volumeInfo.title}\r\n                      subtitle={book.volumeInfo.subtitle}\r\n                      link={book.volumeInfo.infoLink}\r\n                      authors={book.volumeInfo.authors.join(\", \")}\r\n                      description={book.volumeInfo.description}\r\n                      image={book.volumeInfo.imageLinks.thumbnail}\r\n                      Button={() => (\r\n                        <button\r\n                          onClick={() => this.handleBookSave(book.id)}\r\n                          className=\"btn btn-primary ml-2\" \r\n                        >\r\n                          Save\r\n                        </button>\r\n                      )}\r\n                    />\r\n                  ))}\r\n                </List>\r\n              ) : (\r\n                <h2 className=\"text-center\">{this.state.message}</h2>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Footer />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport Card from \"../components/Card\";\r\nimport Book from \"../components/Book\";\r\nimport Footer from \"../components/Footer\";\r\nimport API from \"../utils/API\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List } from \"../components/List\";\r\n\r\nclass Saved extends Component {\r\n  state = {\r\n    books: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getSavedBooks();\r\n  }\r\n\r\n  getSavedBooks = () => {\r\n    API.getSavedBooks()\r\n      .then(res =>\r\n        this.setState({\r\n          books: res.data\r\n        })\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleBookDelete = id => {\r\n    API.deleteBook(id).then(res => this.getSavedBooks());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <Jumbotron>\r\n              <h1 className=\"text-center\">\r\n                <strong>(React) Google Books Search</strong>\r\n              </h1>\r\n              <h2 className=\"text-center\">Search for and Save Books of Interest.</h2>\r\n            </Jumbotron>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <Card title=\"Saved Books\" icon=\"download\">\r\n              {this.state.books.length ? (\r\n                <List>\r\n                  {this.state.books.map(book => (\r\n                    <Book\r\n                      key={book._id}\r\n                      title={book.title}\r\n                      subtitle={book.subtitle}\r\n                      link={book.link}\r\n                      authors={book.authors.join(\", \")}\r\n                      description={book.description}\r\n                      image={book.image}\r\n                      Button={() => (\r\n                        <button\r\n                          onClick={() => this.handleBookDelete(book._id)}\r\n                          className=\"btn btn-danger ml-2\"\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      )}\r\n                    />\r\n                  ))}\r\n                </List>\r\n              ) : (\r\n                <h2 className=\"text-center\">No Saved Books</h2>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Footer />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Saved;\r\n","import React from \"react\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col size=\"md-12\">\r\n          <Jumbotron>\r\n            <h1 className=\"text-center\">404 Page Not Found</h1>\r\n            <h1 className=\"text-center\">\r\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n                🙄\r\n              </span>\r\n            </h1>\r\n          </Jumbotron>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NoMatch;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nclass Nav extends Component {\r\n  state = {\r\n    open: false,\r\n    width: window.innerWidth\r\n  };\r\n\r\n  updateWidth = () => {\r\n    const newState = { width: window.innerWidth };\r\n\r\n    if (this.state.open && newState.width > 991) {\r\n      newState.open = false;\r\n    }\r\n\r\n    this.setState(newState);\r\n  };\r\n\r\n  toggleNav = () => {\r\n    this.setState({ open: !this.state.open });\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateWidth);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateWidth);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-2\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Google Books\r\n        </Link>\r\n        <button\r\n          onClick={this.toggleNav}\r\n          className=\"navbar-toggler\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className={`${this.state.open ? \"\" : \"collapse \"}navbar-collapse`} id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                onClick={this.toggleNav}\r\n                className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\r\n                to=\"/\"\r\n              >\r\n                Search\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                onClick={this.toggleNav}\r\n                className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\r\n                to=\"/saved\"\r\n              >\r\n                Saved\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Saved from \"./pages/Saved\";\r\nimport NoMatch from \"./pages/NoMatch\";\r\nimport Nav from \"./components/Nav\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Nav />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/saved\" component={Saved} />\r\n          <Route component={NoMatch} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}